agent_find_age_of_player
=> nrel_main_idtf:
	[агентная scp-программа поиска возраста игрока] (* <- lang_ru;; *);
	[agent scp-program search age of player] (* <- lang_en;; *);
	<- agent_scp_program;;

scp_program -> agent_find_age_of_player(*
	-> rrel_params: .agent_find_age_of_player_params
		(*
		-> rrel_1: rrel_in: _event;;
		-> rrel_2: rrel_in: _input_arc;;
		*);;

	-> rrel_operators: .agent_find_age_of_player_operator_set
		(*
		-> rrel_init: .agent_find_age_of_player_operator1A
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_assign: rrel_scp_var: _temp;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _input_arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _quest;;

			=> nrel_then: .agent_find_age_of_player_operator1B;;
			=> nrel_else: .agent_find_age_of_player_operator_return;;
			*);;

		-> .agent_find_age_of_player_operator1B
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: action_find_age_of_player;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_then: .agent_find_age_of_player_operator1C;;
			=> nrel_else: .agent_find_age_of_player_operator_return;;
			*);;

		-> .agent_find_age_of_player_operator1C
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_3: rrel_assign: rrel_scp_var: _pattern;;

			=> nrel_then: .agent_find_age_of_player_operator_gen_answer;;
			=> nrel_else: .agent_find_age_of_player_operator_message;;
			*);;



		-> .agent_find_age_of_player_operator_gen_answer//начало
			(*
			<- genEl;;

			-> rrel_1: rrel_assign: rrel_node: rrel_const: rrel_scp_var: _answer_for_checking_domains_of_relation;;

			=> nrel_goto: .agent_find_age_of_player_operator1D1;;
			*);;

		-> .agent_find_age_of_player_operator1D1
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer_for_checking_domains_of_relation;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _pattern;;

			=> nrel_goto: .agent_find_age_of_player_operator1D1_2;;
			*);;


		-> .agent_find_age_of_player_operator1D1_2
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer_for_checking_domains_of_relation;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_const: nrel_birthday;;

			=> nrel_goto: .agent_find_age_of_player_operator1D2;;
			*);;

		-> .agent_find_age_of_player_operator1D2
			(*
			<- searchSetStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _pattern;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _age_period;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_birthday;;

			-> rrel_set_2: rrel_fixed: rrel_scp_var: _answer_for_checking_domains_of_relation;;
			-> rrel_set_3: rrel_fixed: rrel_scp_var: _answer_for_checking_domains_of_relation;;
			-> rrel_set_4: rrel_fixed: rrel_scp_var: _answer_for_checking_domains_of_relation;;

			=> nrel_then: .agent_find_age_of_player_operator_y1;;
			=> nrel_else: .agent_find_age_of_player_operator_return;;
			*);;


		-> .agent_find_age_of_player_operator_y1
			(*
			<- searchSetStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _age_period;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _age_period_year;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_date_year;;

			=> nrel_then: .agent_find_age_of_player_operator_y2;;
			=> nrel_else: .agent_find_age_of_player_operator_return;;
			*);;


		-> .agent_find_age_of_player_operator_y2
			(*
			<- contSub;;

			-> rrel_1: rrel_assign: rrel_scp_var: _age_of_player;;
			-> rrel_2: rrel_fixed: rrel_scp_var: [2019];;
			-> rrel_3: rrel_fixed: rrel_scp_var: _age_period_year;;

			=> nrel_goto: .agent_find_age_of_player_operator_gz;;
			*);;

		-> .agent_find_age_of_player_operator_gz
			(*
			<- genElStr5;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _pattern;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_common: _common_arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _age_of_player;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_age_of_player;;

			=> nrel_goto: .agent_find_age_of_player_operator_y5;;
			*);;

		-> .agent_find_age_of_player_operator_y5
			(*
			<- searchSetStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _pattern;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: rrel_link: _age_of_player;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_age_of_player;;

			-> rrel_set_2: rrel_fixed: rrel_scp_var: _answer_for_checking_domains_of_relation;;
			-> rrel_set_3: rrel_fixed: rrel_scp_var: _answer_for_checking_domains_of_relation;;
			-> rrel_set_4: rrel_fixed: rrel_scp_var: _answer_for_checking_domains_of_relation;;

			=> nrel_then: .agent_find_age_of_player_operator_y6;;
			=> nrel_else: .agent_find_genres_of_animation_operator_return;;
			*);;

		-> .agent_find_age_of_player_operator_y6
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _answer_for_checking_domains_of_relation;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_const: nrel_age_of_player;;

			=> nrel_goto: .agent_find_age_of_player_operator_answer;;
			*);;

		-> .agent_find_age_of_player_operator_answer
			(*
			<- genElStr5;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_common: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _answer_for_checking_domains_of_relation;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_answer;;

			=> nrel_goto: .agent_find_age_of_player_operator_success;;
			*);;

		-> .agent_find_age_of_player_operator_success
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_successfully;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_goto: .agent_find_age_of_player_operator_return;;
			*);;

		-> .agent_find_age_of_player_operator_message
			(*
			<- call;;

			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_adding_validating_message;;
			-> rrel_2: rrel_fixed: rrel_scp_const: .agent_find_age_of_player_operator_message_params
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_const: [Wrong first parameter! It must be a structure(rrel_struct).];;
				*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

			=> nrel_goto: .agent_find_age_of_player_operator_message_wait;;
			*);;

		-> .agent_find_age_of_player_operator_message_wait
			(*
			<- waitReturn;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;

			=> nrel_goto: .agent_find_age_of_player_operator_return;;
			*);;

		-> .agent_find_age_of_player_operator_return
			(*
			<- return;;
			*);;
		*);;
*);;
